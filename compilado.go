/*----HEADER----*/
package main;

import (
	"fmt";
)

var t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56, t57, t58, t59, t60, t61, t62, t63, t64, t65, t66, t67, t68, t69, t70, t71, t72, t73, t74, t75, t76, t77, t78, t79, t80, t81, t82, t83, t84, t85, t86, t87, t88, t89, t90, t91, t92, t93, t94, t95, t96, t97, t98, t99, t100, t101, t102, t103, t104, t105, t106, t107, t108, t109, t110, t111, t112, t113, t114, t115, t116, t117, t118, t119, t120, t121, t122, t123, t124, t125, t126, t127, t128, t129, t130, t131, t132, t133, t134, t135, t136, t137, t138, t139, t140, t141, t142, t143, t144, t145, t146, t147, t148, t149, t150, t151, t152, t153, t154, t155, t156, t157, t158, t159, t160, t161, t162, t163, t164, t165, t166, t167, t168, t169, t170, t171, t172 float64;
var P, H float64;
var stack [30101999]float64;
var heap [30101999]float64;

/*-----NATIVES-----*/
func printString(){
	t1=P+1;
	t2=stack[int(t1)];
	L1:
	t3=heap[int(t2)];
	if t3 == -1 {goto L0;}
	fmt.Printf("%c", int(t3));
	t2=t2+1;
	goto L1;
	L0:
	return;
}
func concatenar(){
	t133=H;
	t134=P+1;
	t135=stack[int(t134)];
	L51:
	t136=heap[int(t135)];
	if t136 == -1 {goto L52;}
	heap[int(H)]=t136;
	H=H+1;
	t135=t135+1;
	goto L51;
	L52:
	t134=P+2;
	t135=stack[int(t134)];
	L53:
	t136=heap[int(t135)];
	if t136 == -1 {goto L50;}
	heap[int(H)]=t136;
	H=H+1;
	t135=t135+1;
	goto L53;
	L50:
	heap[int(H)]=-1;
	H=H+1;
	stack[int(P)]=t133;
	return;
}


func main(){
	t0=H;
	heap[int(H)]=-1;
	H=H+1;
	t4=P+0;
	t4=t4+1;
	stack[int(t4)]=t0;
	P=P+0;
	printString();
	t5=stack[int(P)];
	P=P-0;
	fmt.Printf("%c", int(10));
	t6=H;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t7=P+0;
	t7=t7+1;
	stack[int(t7)]=t6;
	P=P+0;
	printString();
	t8=stack[int(P)];
	P=P-0;
	fmt.Printf("%c", int(10));
	t9=H;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=87;
	H=H+1;
	heap[int(H)]=72;
	H=H+1;
	heap[int(H)]=73;
	H=H+1;
	heap[int(H)]=76;
	H=H+1;
	heap[int(H)]=69;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t10=P+0;
	t10=t10+1;
	stack[int(t10)]=t9;
	P=P+0;
	printString();
	t11=stack[int(P)];
	P=P-0;
	fmt.Printf("%c", int(10));
	t12=H;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t13=P+0;
	t13=t13+1;
	stack[int(t13)]=t12;
	P=P+0;
	printString();
	t14=stack[int(P)];
	P=P-0;
	fmt.Printf("%c", int(10));
	/* Compilacion de valor de variable */
	/* Fin de valor de variable */
	stack[int(0)]=0;
	
	/* INICIO DE WHILE */
	L2:
	/* INICIO EXPRESION RELACIONAL */
	/* Compilacion de Acceso */
	t15=stack[int(0)];
	/* Fin compilacion acceso */
	
	if t15 >= 0 {goto L3;}
	goto L4;
	/* FIN DE EXPRESION RELACIONAL */
	
	L3:
	/* Compilacion de If */
	/* INICIO EXPRESION RELACIONAL */
	/* Compilacion de Acceso */
	t16=stack[int(0)];
	/* Fin compilacion acceso */
	
	if t16 == 0 {goto L5;}
	goto L6;
	/* FIN DE EXPRESION RELACIONAL */
	
	L5:
	/* Compilacion de valor de variable */
	/* Compilacion de Acceso */
	t17=stack[int(0)];
	/* Fin compilacion acceso */
	
	t18=t17+100;
	/* Fin de valor de variable */
	stack[int(0)]=t18;
	
	goto L7;
	L6:
	/* Compilacion de If */
	/* INICIO EXPRESION RELACIONAL */
	/* Compilacion de Acceso */
	t19=stack[int(0)];
	/* Fin compilacion acceso */
	
	if t19 > 50 {goto L8;}
	goto L9;
	/* FIN DE EXPRESION RELACIONAL */
	
	L8:
	/* Compilacion de valor de variable */
	/* Compilacion de Acceso */
	t20=stack[int(0)];
	/* Fin compilacion acceso */
	
	t21=t20/2;
	t22=t21-25;
	/* Fin de valor de variable */
	stack[int(0)]=t22;
	
	goto L10;
	L9:
	/* Compilacion de valor de variable */
	/* Compilacion de Acceso */
	t23=stack[int(0)];
	/* Fin compilacion acceso */
	
	t24=t23/2;
	t25=t24-1;
	/* Fin de valor de variable */
	stack[int(0)]=t25;
	
	L10:
	L7:
	/* Compilacion de Acceso */
	t26=stack[int(0)];
	/* Fin compilacion acceso */
	
	fmt.Printf("%f", t26);
	fmt.Printf("%c", int(10));
	goto L2;
	L4:
	/* FIN DE WHILE */
	t27=H;
	heap[int(H)]=-1;
	H=H+1;
	t28=P+1;
	t28=t28+1;
	stack[int(t28)]=t27;
	P=P+1;
	printString();
	t29=stack[int(P)];
	P=P-1;
	fmt.Printf("%c", int(10));
	t30=H;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t31=P+1;
	t31=t31+1;
	stack[int(t31)]=t30;
	P=P+1;
	printString();
	t32=stack[int(P)];
	P=P-1;
	fmt.Printf("%c", int(10));
	t33=H;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=87;
	H=H+1;
	heap[int(H)]=72;
	H=H+1;
	heap[int(H)]=73;
	H=H+1;
	heap[int(H)]=76;
	H=H+1;
	heap[int(H)]=69;
	H=H+1;
	heap[int(H)]=45;
	H=H+1;
	heap[int(H)]=50;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t34=P+1;
	t34=t34+1;
	stack[int(t34)]=t33;
	P=P+1;
	printString();
	t35=stack[int(P)];
	P=P-1;
	fmt.Printf("%c", int(10));
	t36=H;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t37=P+1;
	t37=t37+1;
	stack[int(t37)]=t36;
	P=P+1;
	printString();
	t38=stack[int(P)];
	P=P-1;
	fmt.Printf("%c", int(10));
	/* Compilacion de valor de variable */
	t39=0-2;
	/* Fin de valor de variable */
	stack[int(0)]=t39;
	
	/* Compilacion de valor de variable */
	/* Compilacion de Acceso */
	t40=stack[int(0)];
	/* Fin compilacion acceso */
	
	t41=t40+1;
	/* Fin de valor de variable */
	stack[int(0)]=t41;
	
	/* INICIO DE WHILE */
	L11:
	/* INICIO EXPRESION RELACIONAL */
	/* Compilacion de Acceso */
	t42=stack[int(0)];
	/* Fin compilacion acceso */
	
	if t42 != 12 {goto L12;}
	goto L13;
	/* FIN DE EXPRESION RELACIONAL */
	
	L12:
	/* Compilacion de valor de variable */
	/* Compilacion de Acceso */
	t43=stack[int(0)];
	/* Fin compilacion acceso */
	
	t44=t43+1;
	/* Fin de valor de variable */
	stack[int(0)]=t44;
	
	/* Compilacion de If */
	/* INICIO EXPRESION LOGICA */
	/* INICIO EXPRESION LOGICA */
	/* INICIO EXPRESION LOGICA */
	/* INICIO EXPRESION RELACIONAL */
	/* Compilacion de Acceso */
	t45=stack[int(0)];
	/* Fin compilacion acceso */
	
	if t45 == 0 {goto L14;}
	goto L18;
	/* FIN DE EXPRESION RELACIONAL */
	
	L18:
	/* INICIO EXPRESION RELACIONAL */
	/* Compilacion de Acceso */
	t46=stack[int(0)];
	/* Fin compilacion acceso */
	
	if t46 == 1 {goto L14;}
	goto L17;
	/* FIN DE EXPRESION RELACIONAL */
	
	/* FINALIZO EXPRESION LOGICA */
	
	L17:
	/* INICIO EXPRESION RELACIONAL */
	/* Compilacion de Acceso */
	t47=stack[int(0)];
	/* Fin compilacion acceso */
	
	if t47 == 11 {goto L14;}
	goto L16;
	/* FIN DE EXPRESION RELACIONAL */
	
	/* FINALIZO EXPRESION LOGICA */
	
	L16:
	/* INICIO EXPRESION RELACIONAL */
	/* Compilacion de Acceso */
	t48=stack[int(0)];
	/* Fin compilacion acceso */
	
	if t48 == 12 {goto L14;}
	goto L15;
	/* FIN DE EXPRESION RELACIONAL */
	
	/* FINALIZO EXPRESION LOGICA */
	
	L14:
	t49=H;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t50=P+1;
	t50=t50+1;
	stack[int(t50)]=t49;
	P=P+1;
	printString();
	t51=stack[int(P)];
	P=P-1;
	fmt.Printf("%c", int(10));
	goto L19;
	L15:
	/* Compilacion de If */
	/* INICIO EXPRESION RELACIONAL */
	/* Compilacion de Acceso */
	t52=stack[int(0)];
	/* Fin compilacion acceso */
	
	if t52 == 2 {goto L20;}
	goto L21;
	/* FIN DE EXPRESION RELACIONAL */
	
	L20:
	t53=H;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t54=P+1;
	t54=t54+1;
	stack[int(t54)]=t53;
	P=P+1;
	printString();
	t55=stack[int(P)];
	P=P-1;
	fmt.Printf("%c", int(10));
	goto L22;
	L21:
	/* Compilacion de If */
	/* INICIO EXPRESION LOGICA */
	/* INICIO EXPRESION RELACIONAL */
	/* Compilacion de Acceso */
	t56=stack[int(0)];
	/* Fin compilacion acceso */
	
	if t56 >= 3 {goto L25;}
	goto L24;
	/* FIN DE EXPRESION RELACIONAL */
	
	L25:
	/* INICIO EXPRESION RELACIONAL */
	/* Compilacion de Acceso */
	t57=stack[int(0)];
	/* Fin compilacion acceso */
	
	if t57 <= 5 {goto L23;}
	goto L24;
	/* FIN DE EXPRESION RELACIONAL */
	
	/* FINALIZO EXPRESION LOGICA */
	
	L23:
	t58=H;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t59=P+1;
	t59=t59+1;
	stack[int(t59)]=t58;
	P=P+1;
	printString();
	t60=stack[int(P)];
	P=P-1;
	fmt.Printf("%c", int(10));
	goto L26;
	L24:
	/* Compilacion de If */
	/* INICIO EXPRESION RELACIONAL */
	/* Compilacion de Acceso */
	t61=stack[int(0)];
	/* Fin compilacion acceso */
	
	if t61 == 6 {goto L27;}
	goto L28;
	/* FIN DE EXPRESION RELACIONAL */
	
	L27:
	t62=H;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t63=P+1;
	t63=t63+1;
	stack[int(t63)]=t62;
	P=P+1;
	printString();
	t64=stack[int(P)];
	P=P-1;
	fmt.Printf("%c", int(10));
	goto L29;
	L28:
	/* Compilacion de If */
	/* INICIO EXPRESION LOGICA */
	/* INICIO EXPRESION RELACIONAL */
	/* Compilacion de Acceso */
	t65=stack[int(0)];
	/* Fin compilacion acceso */
	
	if t65 >= 7 {goto L32;}
	goto L31;
	/* FIN DE EXPRESION RELACIONAL */
	
	L32:
	/* INICIO EXPRESION RELACIONAL */
	/* Compilacion de Acceso */
	t66=stack[int(0)];
	/* Fin compilacion acceso */
	
	if t66 <= 9 {goto L30;}
	goto L31;
	/* FIN DE EXPRESION RELACIONAL */
	
	/* FINALIZO EXPRESION LOGICA */
	
	L30:
	t67=H;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t68=P+1;
	t68=t68+1;
	stack[int(t68)]=t67;
	P=P+1;
	printString();
	t69=stack[int(P)];
	P=P-1;
	fmt.Printf("%c", int(10));
	goto L33;
	L31:
	/* Compilacion de If */
	/* INICIO EXPRESION RELACIONAL */
	/* Compilacion de Acceso */
	t70=stack[int(0)];
	/* Fin compilacion acceso */
	
	if t70 == 10 {goto L34;}
	goto L35;
	/* FIN DE EXPRESION RELACIONAL */
	
	L34:
	t71=H;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t72=P+1;
	t72=t72+1;
	stack[int(t72)]=t71;
	P=P+1;
	printString();
	t73=stack[int(P)];
	P=P-1;
	fmt.Printf("%c", int(10));
	L35:
	L33:
	L29:
	L26:
	L22:
	L19:
	goto L11;
	L13:
	/* FIN DE WHILE */
	t74=H;
	heap[int(H)]=-1;
	H=H+1;
	t75=P+1;
	t75=t75+1;
	stack[int(t75)]=t74;
	P=P+1;
	printString();
	t76=stack[int(P)];
	P=P-1;
	fmt.Printf("%c", int(10));
	t77=H;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t78=P+1;
	t78=t78+1;
	stack[int(t78)]=t77;
	P=P+1;
	printString();
	t79=stack[int(P)];
	P=P-1;
	fmt.Printf("%c", int(10));
	t80=H;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=84;
	H=H+1;
	heap[int(H)]=82;
	H=H+1;
	heap[int(H)]=65;
	H=H+1;
	heap[int(H)]=78;
	H=H+1;
	heap[int(H)]=83;
	H=H+1;
	heap[int(H)]=70;
	H=H+1;
	heap[int(H)]=69;
	H=H+1;
	heap[int(H)]=82;
	H=H+1;
	heap[int(H)]=69;
	H=H+1;
	heap[int(H)]=78;
	H=H+1;
	heap[int(H)]=67;
	H=H+1;
	heap[int(H)]=73;
	H=H+1;
	heap[int(H)]=65;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t81=P+1;
	t81=t81+1;
	stack[int(t81)]=t80;
	P=P+1;
	printString();
	t82=stack[int(P)];
	P=P-1;
	fmt.Printf("%c", int(10));
	t83=H;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t84=P+1;
	t84=t84+1;
	stack[int(t84)]=t83;
	P=P+1;
	printString();
	t85=stack[int(P)];
	P=P-1;
	fmt.Printf("%c", int(10));
	/* Compilacion de valor de variable */
	t86=0-1;
	/* Fin de valor de variable */
	stack[int(1)]=t86;
	
	/* INICIO DE WHILE */
	L36:
	/* INICIO EXPRESION RELACIONAL */
	/* Compilacion de Acceso */
	t87=stack[int(1)];
	/* Fin compilacion acceso */
	
	if t87 < 5 {goto L37;}
	goto L38;
	/* FIN DE EXPRESION RELACIONAL */
	
	L37:
	/* Compilacion de valor de variable */
	/* Compilacion de Acceso */
	t88=stack[int(1)];
	/* Fin compilacion acceso */
	
	t89=t88+1;
	/* Fin de valor de variable */
	stack[int(1)]=t89;
	
	/* Compilacion de If */
	/* INICIO EXPRESION RELACIONAL */
	/* Compilacion de Acceso */
	t90=stack[int(1)];
	/* Fin compilacion acceso */
	
	if t90 == 3 {goto L39;}
	goto L40;
	/* FIN DE EXPRESION RELACIONAL */
	
	L39:
	t91=H;
	heap[int(H)]=97;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t92=P+2;
	t92=t92+1;
	stack[int(t92)]=t91;
	P=P+2;
	printString();
	t93=stack[int(P)];
	P=P-2;
	goto L36;
	goto L41;
	L40:
	/* Compilacion de If */
	/* INICIO EXPRESION RELACIONAL */
	/* Compilacion de Acceso */
	t94=stack[int(1)];
	/* Fin compilacion acceso */
	
	if t94 == 4 {goto L42;}
	goto L43;
	/* FIN DE EXPRESION RELACIONAL */
	
	L42:
	t95=H;
	heap[int(H)]=98;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t96=P+2;
	t96=t96+1;
	stack[int(t96)]=t95;
	P=P+2;
	printString();
	t97=stack[int(P)];
	P=P-2;
	fmt.Printf("%c", int(10));
	goto L38;
	L43:
	L41:
	t98=H;
	heap[int(H)]=69;
	H=H+1;
	heap[int(H)]=108;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=118;
	H=H+1;
	heap[int(H)]=97;
	H=H+1;
	heap[int(H)]=108;
	H=H+1;
	heap[int(H)]=111;
	H=H+1;
	heap[int(H)]=114;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=100;
	H=H+1;
	heap[int(H)]=101;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=97;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=101;
	H=H+1;
	heap[int(H)]=115;
	H=H+1;
	heap[int(H)]=58;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t99=P+2;
	t99=t99+1;
	stack[int(t99)]=t98;
	P=P+2;
	printString();
	t100=stack[int(P)];
	P=P-2;
	/* Compilacion de Acceso */
	t101=stack[int(1)];
	/* Fin compilacion acceso */
	
	fmt.Printf("%d", int(t101));
	t102=H;
	heap[int(H)]=44;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t103=P+2;
	t103=t103+1;
	stack[int(t103)]=t102;
	P=P+2;
	printString();
	t104=stack[int(P)];
	P=P-2;
	goto L36;
	L38:
	/* FIN DE WHILE */
	t105=H;
	heap[int(H)]=83;
	H=H+1;
	heap[int(H)]=101;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=100;
	H=H+1;
	heap[int(H)]=101;
	H=H+1;
	heap[int(H)]=98;
	H=H+1;
	heap[int(H)]=105;
	H=H+1;
	heap[int(H)]=195;
	H=H+1;
	heap[int(H)]=179;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=105;
	H=H+1;
	heap[int(H)]=109;
	H=H+1;
	heap[int(H)]=112;
	H=H+1;
	heap[int(H)]=114;
	H=H+1;
	heap[int(H)]=105;
	H=H+1;
	heap[int(H)]=109;
	H=H+1;
	heap[int(H)]=105;
	H=H+1;
	heap[int(H)]=114;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t106=P+2;
	t106=t106+1;
	stack[int(t106)]=t105;
	P=P+2;
	printString();
	t107=stack[int(P)];
	P=P-2;
	fmt.Printf("%c", int(10));
	t108=H;
	heap[int(H)]=-1;
	H=H+1;
	t109=P+2;
	t109=t109+1;
	stack[int(t109)]=t108;
	P=P+2;
	printString();
	t110=stack[int(P)];
	P=P-2;
	fmt.Printf("%c", int(10));
	t111=H;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t112=P+2;
	t112=t112+1;
	stack[int(t112)]=t111;
	P=P+2;
	printString();
	t113=stack[int(P)];
	P=P-2;
	fmt.Printf("%c", int(10));
	t114=H;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=70;
	H=H+1;
	heap[int(H)]=79;
	H=H+1;
	heap[int(H)]=82;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t115=P+2;
	t115=t115+1;
	stack[int(t115)]=t114;
	P=P+2;
	printString();
	t116=stack[int(P)];
	P=P-2;
	fmt.Printf("%c", int(10));
	t117=H;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t118=P+2;
	t118=t118+1;
	stack[int(t118)]=t117;
	P=P+2;
	printString();
	t119=stack[int(P)];
	P=P-2;
	fmt.Printf("%c", int(10));
	/* INICIO DEL FOR */
	t120=0;
	L44:
	t121=P+2;
	stack[int(t121)]=t120;
	/* Compilacion de valor de variable */
	t122=H;
	heap[int(H)]=-1;
	H=H+1;
	/* Fin de valor de variable */
	t123=P+3;
	stack[int(t123)]=t122;
	
	/* INICIO DEL FOR */
	/* Compilacion de Acceso */
	t125=P+2;
	t124=stack[int(t125)];
	/* Fin compilacion acceso */
	
	t126=10-t124;
	t127=0;
	L47:
	t128=P+4;
	stack[int(t128)]=t127;
	/* Compilacion de valor de variable */
	/* Compilacion de Acceso */
	t130=P+3;
	t129=stack[int(t130)];
	/* Fin compilacion acceso */
	
	t131=H;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t137=P+5;
	t137=t137+1;
	stack[int(t137)]=t129;
	t137=t137+1;
	stack[int(t137)]=t131;
	P=P+5;
	concatenar();
	t138=stack[int(P)];
	P=P-5;
	/* Fin de valor de variable */
	t139=P+3;
	stack[int(t139)]=t138;
	
	goto L49;
	L49:
	t127=t127+1;
	if t127 > t126 {goto L48;}
	goto L47;
	L48:
	/* FIN DEL FOR */
	/* INICIO DEL FOR */
	/* Compilacion de Acceso */
	t141=P+2;
	t140=stack[int(t141)];
	/* Fin compilacion acceso */
	
	t142=0;
	L54:
	t143=P+4;
	stack[int(t143)]=t142;
	/* Compilacion de valor de variable */
	/* Compilacion de Acceso */
	t145=P+3;
	t144=stack[int(t145)];
	/* Fin compilacion acceso */
	
	t146=H;
	heap[int(H)]=42;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t148=P+5;
	t148=t148+1;
	stack[int(t148)]=t144;
	t148=t148+1;
	stack[int(t148)]=t146;
	P=P+5;
	concatenar();
	t149=stack[int(P)];
	P=P-5;
	/* Fin de valor de variable */
	t150=P+3;
	stack[int(t150)]=t149;
	
	goto L56;
	L56:
	t142=t142+1;
	if t142 > t140 {goto L55;}
	goto L54;
	L55:
	/* FIN DEL FOR */
	/* Compilacion de Acceso */
	t152=P+3;
	t151=stack[int(t152)];
	/* Fin compilacion acceso */
	
	t153=P+4;
	t153=t153+1;
	stack[int(t153)]=t151;
	P=P+4;
	printString();
	t154=stack[int(P)];
	P=P-4;
	fmt.Printf("%c", int(10));
	goto L46;
	L46:
	t120=t120+1;
	if t120 > 9 {goto L45;}
	goto L44;
	L45:
	/* FIN DEL FOR */
	t155=H;
	heap[int(H)]=-1;
	H=H+1;
	t156=P+2;
	t156=t156+1;
	stack[int(t156)]=t155;
	P=P+2;
	printString();
	t157=stack[int(P)];
	P=P-2;
	fmt.Printf("%c", int(10));
	t158=H;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t159=P+2;
	t159=t159+1;
	stack[int(t159)]=t158;
	P=P+2;
	printString();
	t160=stack[int(P)];
	P=P-2;
	fmt.Printf("%c", int(10));
	t161=H;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=70;
	H=H+1;
	heap[int(H)]=79;
	H=H+1;
	heap[int(H)]=82;
	H=H+1;
	heap[int(H)]=45;
	H=H+1;
	heap[int(H)]=52;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t162=P+2;
	t162=t162+1;
	stack[int(t162)]=t161;
	P=P+2;
	printString();
	t163=stack[int(P)];
	P=P-2;
	fmt.Printf("%c", int(10));
	t164=H;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=61;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t165=P+2;
	t165=t165+1;
	stack[int(t165)]=t164;
	P=P+2;
	printString();
	t166=stack[int(P)];
	P=P-2;
	fmt.Printf("%c", int(10));
	/* INICIO DEL FOR */
	t167=H;
	heap[int(H)]=67;
	H=H+1;
	heap[int(H)]=97;
	H=H+1;
	heap[int(H)]=108;
	H=H+1;
	heap[int(H)]=105;
	H=H+1;
	heap[int(H)]=102;
	H=H+1;
	heap[int(H)]=105;
	H=H+1;
	heap[int(H)]=99;
	H=H+1;
	heap[int(H)]=97;
	H=H+1;
	heap[int(H)]=99;
	H=H+1;
	heap[int(H)]=105;
	H=H+1;
	heap[int(H)]=111;
	H=H+1;
	heap[int(H)]=110;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=100;
	H=H+1;
	heap[int(H)]=101;
	H=H+1;
	heap[int(H)]=32;
	H=H+1;
	heap[int(H)]=73;
	H=H+1;
	heap[int(H)]=110;
	H=H+1;
	heap[int(H)]=116;
	H=H+1;
	heap[int(H)]=101;
	H=H+1;
	heap[int(H)]=114;
	H=H+1;
	heap[int(H)]=109;
	H=H+1;
	heap[int(H)]=101;
	H=H+1;
	heap[int(H)]=100;
	H=H+1;
	heap[int(H)]=105;
	H=H+1;
	heap[int(H)]=111;
	H=H+1;
	heap[int(H)]=-1;
	H=H+1;
	t169=t167;
	t168=heap[int(t169)];
	L57:
	t170=P+2;
	stack[int(t170)]=t168;
	/* Compilacion de Acceso */
	t172=P+2;
	t171=stack[int(t172)];
	/* Fin compilacion acceso */
	
	fmt.Printf("%c", int(t171));
	fmt.Printf("%c", int(10));
	goto L59;
	L59:
	t169=t169+1;
	t168=heap[int(t169)];
	if t168 == -1 {goto L58;}
	goto L57;
	L58:
	/* FIN DEL FOR */

}